{"version":3,"sources":["webpack:///./src/components/QueueSystem.jsx","webpack:///./src/components/Batching.jsx","webpack:///./src/components/SafetyInventory.jsx","webpack:///./src/App.jsx","webpack:///./src/index.jsx"],"names":["tex","String","raw","Form","Label","column","sm","QueueSystem","state","setState","useState","result","setResult","Group","as","Row","controlId","Col","Control","type","placeholder","value","alpha","onChange","e","target","p","m","sigma_a","sigma_p","prob_t","Button","variant","onClick","prob_result","Fraction","numberOfServer","lambda","inverse","mu","utilization","div","mul","coeffVarArrival","coeffVarService","pr_m_busy","Math","pow","valueOf","toFixed","waitTime","add","sub","flowTime","exp","toFraction","align","className","Batching","normalDistResult","setNormDistResult","criticalRatio","cu","co","zValue","lzValue","expectedDemand","standDev","quantity","lostSales","expectedSales","expectedLeftoverInventory","expectedProfit","fillRate","alert","unitCost","salvageValue","price","SafetyInventory","setupCost","annualDemand","holdingCost","carryingCostRate","eoq","optimalCost","holdingCostPerUnit","numberOfPurchase","Container","style","margin","Tabs","defaultActiveKey","id","Tab","eventKey","title","App","Component","constructor","props","super","this","render","ReactDOM","document","getElementById"],"mappings":"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","file":"js/main.b3171725a28601730f8f.js","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Col, Row, Button } from 'react-bootstrap';\nimport { MathComponent } from 'mathjax-react';\nimport Fraction from 'fraction.js';\n\nconst QueueSystem = () => {\n\n    const [state, setState] = useState({});\n    const [result, setResult] = useState(null);\n\n    const handleCalculate = () => {\n        const alpha = new Fraction(state.alpha);\n        const p = new Fraction(state.p);\n        const numberOfServer = new Fraction(state.m);\n        const sigma_a = new Fraction(state.sigma_a);\n        const sigma_p = new Fraction(state.sigma_p);\n\n        const lambda = alpha.inverse();\n        const mu = p.inverse();\n        const utilization = p.div(numberOfServer.mul(alpha));\n        const coeffVarArrival = sigma_a.div(alpha);\n        const coeffVarService = sigma_p.div(p);\n\n        const pr_m_busy = Math.pow(utilization.valueOf(), Math.pow(2*numberOfServer.valueOf() + 2, 0.5) - 1).toFixed(5);\n        const waitTime = (p.div(numberOfServer))\n            .mul(((coeffVarArrival.mul(coeffVarArrival)).add(coeffVarService.mul(coeffVarService))).div(2))\n            .mul(new Fraction(pr_m_busy).div(new Fraction(1).sub(utilization)));\n        const flowTime = waitTime.add(p);\n\n        let prob_t, prob_result;\n        if (state.prob_t) {\n            prob_t = new Fraction(state.prob_t);\n            prob_result = (1 - Math.exp(-(prob_t.valueOf())/flowTime.valueOf())).toFixed(5);\n        }\n\n        setResult(\n            <div>\n                <MathComponent tex={String.raw`\\text{Average arrival rate  } \\lambda, `}/>\n                <MathComponent tex={String.raw`\\lambda = \\frac{1}{a} = \\frac{1}{` + alpha + '} = ' + lambda.toFraction()}/>\n                <MathComponent tex={String.raw`\\text{Average service rate  } \\mu,`}/>\n                <MathComponent tex={String.raw`\\mu = \\frac{1}{p} = \\frac{1}{` + p + '} = ' + mu.toFraction()} />\n                <MathComponent tex={String.raw`\\text{Coefficient of variation of arrivals  } CV_a,`}/>\n                <MathComponent tex={String.raw`CV_a = \\frac{\\sigma_a}{a} = \\frac{` + sigma_a + '}{' + alpha + '} = ' + coeffVarArrival.toFraction()} />\n                <MathComponent tex={String.raw`\\text{Coefficient of variation of service  } CV_p,`}/>\n                <MathComponent tex={String.raw`CV_p = \\frac{\\sigma_p}{p} = \\frac{` + sigma_p + '}{' + p + '} = ' + coeffVarService.toFraction()} />\n                <MathComponent tex={String.raw`\\text{Utilization } \\rho = \\frac{p}{ma} = \\frac{`+ p.toFraction() + '}{'+ numberOfServer.toFraction() + String.raw` \\times` + alpha.toFraction() + '} = ' + utilization.toFraction()}/>\n                <MathComponent tex={String.raw`\\text{Probability of all m servers are busy } Pr(Busy),`}/>\n                <MathComponent tex={String.raw`Pr(Busy) = \\rho^{-1+\\sqrt{2(m+1)}} = (` + utilization.toFraction() + String.raw`)^{-1+\\sqrt{2(` + numberOfServer.toFraction() + ' + 1)}} = ' + pr_m_busy} />\n                <hr />\n                <MathComponent tex={String.raw`\\text{Average Wait Time}`}/>\n                <MathComponent tex={String.raw`T_{wait} = \\frac{p}{m} \\left( \\frac{CV_{a}^2 + CV_{p}^2}{2} \\right) \\left( \\frac{Pr(Busy)}{1-\\rho} \\right)`}/>\n                <MathComponent tex={String.raw`T_{wait} = \\frac{`+ p.toFraction() +`}{`\n                    + numberOfServer.toFraction() + String.raw`} \\left( \\frac{(`\n                    + coeffVarArrival.toFraction() + String.raw`)^2 + (`+ coeffVarService.toFraction()\n                    + String.raw`)^2}{2} \\right) \\left( \\frac{` + pr_m_busy +`}{` + (new Fraction(1).sub(utilization)).toFraction() + String.raw`} \\right) = `\n                    + waitTime.valueOf().toFixed(5) }/>\n                <MathComponent tex={String.raw`\\text{Average Flow Time },  T_{flow} = T{wait} + p = ` + waitTime.valueOf() + ' + ' + p.valueOf() + ' = ' + flowTime.valueOf().toFixed(5)} />\n                <hr />\n                { !prob_result ? null : (\n                    <>\n                        <MathComponent tex={String.raw`\\text{Probability Flow Time is less than t:}`}/>\n                        <MathComponent tex={String.raw`Prob(\\text{Flow Time } T < t) = 1 - e^{-t/\\text{Average Flow Time}}`} />\n                        <MathComponent tex={String.raw`Prob(\\text{Flow Time } T < t) = 1 - e^{(-` + prob_t.toFraction() + `)/(` + flowTime.toFraction() + `)} = ` + prob_result} />\n                    </>\n                )}\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            <br />\n            <h2>Processing Systems With Variation</h2>\n            <br />\n            <Form>\n                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                    <Form.Label column sm=\"5\">\n                        <MathComponent\n                            tex={String.raw`a = \\text{Average Time Between Arrivals}`}/>\n                    </Form.Label>\n                    <br />\n                    <Col sm=\"7\">\n                        <Form.Control type=\"text\" placeholder=\"Average Time Between Arrival\" value={state.alpha || ''} onChange={e => setState({...state, alpha: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                    <Form.Label column sm=\"5\">\n                        <MathComponent\n                            tex={String.raw`p = \\text{Average service time}`}/>\n                    </Form.Label>\n                    <Col sm=\"7\">\n                        <Form.Control type=\"text\" placeholder=\"Average service time\" value={state.p || ''} onChange={e => setState({...state,  p: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row} controlId=\"numberOfServer\">\n                    <Form.Label column sm=\"5\">\n                        <MathComponent\n                            tex={String.raw`m = \\text{Number of Server}`}/>\n                    </Form.Label>\n                    <Col sm=\"7\">\n                        <Form.Control type=\"text\" placeholder=\"Number of Server\" value={state.m || ''} onChange={e => setState({...state,  m: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                    <Form.Label column sm=\"5\">\n                        <MathComponent\n                            tex={String.raw`\\sigma_a = \\text{Arrival Std}`}/>\n                    </Form.Label>\n                    <Col sm=\"7\">\n                        <Form.Control type=\"text\" placeholder=\"Arrival Std\" value={state.sigma_a || ''} onChange={e => setState({...state,  sigma_a: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                    <Form.Label column sm=\"5\">\n                        <MathComponent\n                            tex={String.raw`\\sigma_p = \\text{Service Std}`}/>\n                    </Form.Label>\n                    <Col sm=\"7\">\n                        <Form.Control type=\"text\" placeholder=\"Service Std\" value={state.sigma_p || ''} onChange={e => setState({...state,  sigma_p: e.target.value })}/>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                    <Form.Label column sm=\"5\">\n                        <MathComponent\n                            tex={String.raw`\\text{Flow Time Less than t hrs(or minutes)}`}/>\n                    </Form.Label>\n                    <Col sm=\"7\">\n                        <Form.Control type=\"text\" placeholder=\"Flow Time Less than t hrs(or minutes)\" value={state.prob_t || ''} onChange={e => setState({...state,  prob_t: e.target.value })}/>\n                    </Col>\n                </Form.Group>\n            </Form>\n            <br />\n            <Button variant=\"info\" onClick={handleCalculate}>Calculate Flow Time</Button>\n            <hr />\n            {result}\n        </div>\n    );\n};\n\nexport default QueueSystem;\n","import React, {useState} from 'react';\nimport {Form, Col, Row, Button} from 'react-bootstrap';\nimport {MathComponent} from 'mathjax-react';\nimport Fraction from 'fraction.js';\n\nconst Batching = () => {\n\n    const [state, setState] = useState({});\n    const [result, setResult] = useState(null);\n    const [normalDistResult, setNormDistResult] = useState(null);\n\n    const handleNormallyDistributionCalculation = () => {\n        const { criticalRatio, cu, co } = state;\n\n        if (!criticalRatio) {\n            alert('Please Calculate Critical Ratio First');\n            return;\n        }\n\n        const expectedDemand = new Fraction(state.expectedDemand);\n        const standDev = new Fraction(state.standDev);\n        let zValue,lzValue;\n        if (state.zValue && state.lzValue) {\n            zValue = new Fraction(state.zValue);\n            lzValue = new Fraction(state.lzValue);\n        } else {\n            alert('Please input z-score and Loss Function Value of L(z)');\n            return;\n        }\n\n\n        const quantity = expectedDemand.add(standDev.mul(zValue));\n        const lostSales = standDev.mul(lzValue);\n        const expectedSales = expectedDemand.sub(lostSales);\n        const expectedLeftoverInventory = quantity.sub(expectedSales);\n        const expectedProfit = (cu.mul(expectedSales)).sub(co.mul(expectedLeftoverInventory));\n        const fillRate = expectedSales.div(expectedDemand);\n\n        setNormDistResult(\n            <div>\n                <p align='center' className={'font-weight-bold'}>Quantity Q at Critical Ratio</p>\n                <MathComponent tex={String.raw`Q = \\mu + z\\sigma = ${expectedDemand.toFraction()} + ${zValue.valueOf().toFixed(3)} \\times ${standDev.toFraction()}\n                    = ${quantity.valueOf().toFixed(5)}`}/><br/>\n                <p align='center' className={'font-weight-bold'}>Expected Lost Sales</p>\n                <MathComponent tex={String.raw`\\text{Expected Lost Sales} = E[Max(D-Q, 0)] = \\sigma L(z) \\text{ for Normal Demand}\n                    = ${standDev.toFraction()} \\times ${lzValue.valueOf().toFixed(3)}\n                    = ${lostSales.valueOf().toFixed(5)}`}/><br/>\n                <p align='center' className={'font-weight-bold'}>Expected Sales</p>\n                <MathComponent tex={String.raw`\\text{Expected Sales = Expected Demand - Expected Lost Sales}\n                    = ${expectedDemand.toFraction()} - ${lostSales.valueOf().toFixed(5)}\n                    = ${expectedSales.valueOf().toFixed(5)}`}/><br/>\n                <p align='center' className={'font-weight-bold'}>Expected Leftover Inventory</p>\n                <MathComponent tex={String.raw`\\text{Expected Leftover Inventory = Q - Expected Sales}\n                    = ${quantity.valueOf().toFixed(5)} - ${expectedSales.valueOf().toFixed(5)}\n                    = ${expectedLeftoverInventory.valueOf().toFixed(5)}`}/><br/>\n                <p align='center' className={'font-weight-bold'}>Expected Profit</p>\n                <MathComponent tex={String.raw`\\text{Expected profit = (Price-Cost)}\\times \\text{(Exp.Sales) - (Cost-Salvage Value)} \\times \\text{(Exp. leftover inventory)}`}/>\n                <MathComponent tex={String.raw`\\text{Expected profit} \n                = ${cu.toFraction()} \\times ${expectedSales.valueOf().toFixed(5)} - ${co.toFraction()} \\times ${expectedLeftoverInventory.valueOf().toFixed(5)}\n                = ${expectedProfit.valueOf().toFixed(5)}`}/><br/>\n                <p align='center' className={'font-weight-bold'}>Fill Rate</p>\n                <MathComponent tex={String.raw`\\text{Fill Rate = Expected Sales/Expected Demand} = \\frac{${expectedSales.valueOf().toFixed(5)}}{${expectedDemand.toFraction()}} = ${fillRate.valueOf().toFixed(5)}`}/><br/>\n            </div>\n        );\n    };\n\n    const renderNormallyDistributionForm = () => (\n        <div>\n            <h3>If demand is normally distributed</h3>\n            <Form>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"5\">\n                        <MathComponent\n                            tex={String.raw`\\text{Expected Demand (mean) } \\mu`}/>\n                    </Form.Label>\n                    <br/>\n                    <Col sm=\"7\">\n                        <Form.Control type=\"text\" placeholder=\"Expected Demand (mean)\" value={state.expectedDemand || ''}\n                                      onChange={e => setState({...state, expectedDemand: e.target.value})}/>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"5\">\n                        <MathComponent\n                            tex={String.raw`\\text{Standard Deviation } \\sigma`}/>\n                    </Form.Label>\n                    <br/>\n                    <Col sm=\"7\">\n                        <Form.Control type=\"text\" placeholder=\"Standard Deviation\" value={state.standDev || ''}\n                                      onChange={e => setState({...state, standDev: e.target.value})}/>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"5\">\n                        <MathComponent\n                            tex={String.raw`\\text{z-value}`}/>\n                    </Form.Label>\n                    <br/>\n                    <Col sm=\"7\">\n                        <Form.Control type=\"text\" placeholder=\"z-value\" value={state.zValue || ''}\n                                      onChange={e => setState({...state, zValue: e.target.value})}/>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"5\">\n                        <MathComponent\n                            tex={String.raw`\\text{Loss Function } L(z)`}/>\n                    </Form.Label>\n                    <br/>\n                    <Col sm=\"7\">\n                        <Form.Control type=\"text\" placeholder=\"L(z)\" value={state.lzValue || ''}\n                                      onChange={e => setState({...state, lzValue: e.target.value})}/>\n                    </Col>\n                </Form.Group>\n            </Form>\n            <Button variant=\"info\" onClick={handleNormallyDistributionCalculation}>Calculate assuming Normally Distributed Demand</Button>\n            {normalDistResult}\n        </div>\n    );\n\n    const handleCalculate = () => {\n        const unitCost = new Fraction(state.unitCost);\n        const salvageValue = new Fraction(state.salvageValue);\n        const price = new Fraction(state.price);\n\n        const cu = price.sub(unitCost);\n        const co = unitCost.sub(salvageValue);\n        const criticalRatio = cu.div(cu.add(co));\n        setState({...state, criticalRatio, cu, co});\n\n        setResult(\n            <div>\n                <p align='center' className={'font-weight-bold'}>Cost Per Unit in Inventory Remaining at the end of the period</p>\n                <MathComponent tex={String.raw`Cost of Overage c_o = \\text{unit cost} - \\text{salavage value} = ${unitCost.toFraction()} - ${salvageValue.toFraction()}\n                    = ${unitCost.sub(salvageValue).toFraction()}`}/>\n                <br/>\n                <p align='center' className={'font-weight-bold'}>Cost Per Unit of unsatisified demand</p>\n                <MathComponent tex={String.raw`Cost of Underage c_u = \\text{price} - \\text{unit cost} = ${price.toFraction()} - ${unitCost.toFraction()}\n                    = ${price.sub(unitCost).toFraction()}`}/>\n                <br/>\n                <p align='center' className={'font-weight-bold'}>Critical Ratio</p>\n                <MathComponent tex={String.raw`Prob(D \\leq Q) = \\frac{c_u}{c_u + c_o} = \\frac{${cu.toFraction()}}{${cu.toFraction()}+${co.toFraction()}}\n                    = ${criticalRatio.toFraction()} = ${criticalRatio.valueOf().toFixed(7) * 100}\\%`}/>\n                <br/>\n                <hr/>\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            <br/>\n            <h2>Safety Inventory</h2>\n            <br/>\n            <Form>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"5\">\n                        <MathComponent\n                            tex={String.raw`\\text{Unit Cost}`}/>\n                    </Form.Label>\n                    <br/>\n                    <Col sm=\"7\">\n                        <Form.Control type=\"text\" placeholder=\"Unit Cost\" value={state.unitCost || ''}\n                                      onChange={e => setState({...state, unitCost: e.target.value})}/>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"5\">\n                        <MathComponent\n                            tex={String.raw`\\text{Salvage Value}`}/>\n                    </Form.Label>\n                    <br/>\n                    <Col sm=\"7\">\n                        <Form.Control type=\"text\" placeholder=\"Salvage Value\" value={state.salvageValue || ''}\n                                      onChange={e => setState({...state, salvageValue: e.target.value})}/>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"5\">\n                        <MathComponent\n                            tex={String.raw`\\text{Price}`}/>\n                    </Form.Label>\n                    <br/>\n                    <Col sm=\"7\">\n                        <Form.Control type=\"text\" placeholder=\"Price\" value={state.price || ''}\n                                      onChange={e => setState({...state, price: e.target.value})}/>\n                    </Col>\n                </Form.Group>\n            </Form>\n            <br/>\n            <Button variant=\"info\" onClick={handleCalculate}>Calculate Critical Ratio</Button>\n            <hr/>\n            {result}\n            {renderNormallyDistributionForm()}\n        </div>\n    );\n};\n\nexport default Batching;","import React, {useState} from 'react';\nimport {Form, Col, Row, Button} from 'react-bootstrap';\nimport {MathComponent} from 'mathjax-react';\nimport Fraction from 'fraction.js';\n\n\nconst SafetyInventory = () => {\n\n    const [state, setState] = useState({});\n    const [result, setResult] = useState(null);\n\n    const handleCalculate = () => {\n        const setupCost = new Fraction(state.setupCost);\n        let unitCost;\n        const annualDemand = new Fraction(state.annualDemand);\n\n        let holdingCost\n        if (state.holdingCost) {\n            holdingCost = new Fraction(state.holdingCost);\n            if (state.unitCost) {\n                unitCost = new Fraction(state.unitCost);\n                setState({...state, carryingCostRate: holdingCost.div(unitCost).toFraction()});\n            }\n        } else if (state.unitCost && state.carryingCostRate) {\n            unitCost = new Fraction(state.unitCost);\n            holdingCost = new Fraction(state.carryingCostRate).mul(unitCost);\n            setState({...state, holdingCost: holdingCost.toFraction()})\n        } else {\n            alert('Require to input either holding cost or (unit cost and carrying cost rate)');\n        }\n\n        const eoq = Math.pow(setupCost.mul(2).mul(annualDemand).div(holdingCost).valueOf(), 0.5);\n        const optimalCost = Math.pow(setupCost.mul(2).mul(annualDemand).mul(holdingCost).valueOf(), 0.5);\n        const holdingCostPerUnit = Math.pow(setupCost.mul(2).mul(holdingCost).div(annualDemand).valueOf(), 0.5);\n        const numberOfPurchase = annualDemand.div(eoq);\n\n        setResult(\n            <div>\n                <p align='center' className={'font-weight-bold'}>Economic order quantity (EOQ):</p>\n                <MathComponent tex={String.raw`Q^* = EOQ = \\sqrt{\\frac{2KR}{h}}\n                    = \\sqrt{\\frac{2\\times(${setupCost.toFraction()})\\times(${annualDemand.toFraction()})}{${holdingCost.toFraction()}}}\n                    = ${eoq.toFixed(5)}`}/>\n\n                <br/>\n\n                <p align='center' className={'font-weight-bold'}>Optimal Inventory Cost (not including unit purchase cost cR)</p>\n                <MathComponent tex={String.raw`C(Q^*) = \\frac{K \\times R}{Q^*} + \\frac{h \\times Q^*}{2} = \\sqrt{2 \\times K \\times R \\times h}\n                    = \\sqrt{2 \\times (${setupCost}) \\times (${annualDemand}) \\times (${holdingCost})}\n                    = ${optimalCost.toFixed(5)}`}/>\n\n                <br/>\n                {\n                    state.unitCost ?\n                        (<>\n                                <p align='center' className={'font-weight-bold'}>Total Annual Cost</p>\n                                <MathComponent tex={String.raw`C(Q^*) = \\frac{K \\times R}{Q^*} + \\frac{h \\times Q^*}{2} + cR\n                                = ${optimalCost.toFixed(5)} + (${unitCost.toFraction()}) \\times (${annualDemand.toFraction()})\n                                = ${(optimalCost + unitCost.mul(annualDemand).valueOf()).toFixed(5)}`}/>\n                                <br/>\n                            </>\n                        ) : null\n                }\n\n                <p align='center' className={'font-weight-bold'}>Ordering/Holding Cost Per Unit</p>\n                <MathComponent tex={String.raw`\\frac{C(Q^*)}{R} = \\sqrt{\\frac{2Kh}{R}}\n                    = \\sqrt{\\frac{2\\times(${setupCost.toFraction()})\\times(${holdingCost.toFraction()})}{${annualDemand.toFraction()}}}\n                    = \\frac{${optimalCost.toFixed(5)}}{${annualDemand.toFraction()}}\n                    = ${holdingCostPerUnit.toFixed(5)}`}/>\n\n                <br/>\n\n                <p align='center' className={'font-weight-bold'}>Number of Purchases</p>\n                <MathComponent tex={String.raw`N = \\frac{R}{Q^*}\n                    = \\frac{${annualDemand.toFraction()}}{${eoq.toFixed(5)}}\n                    = ${numberOfPurchase.valueOf().toFixed(5)}`}/>\n\n                <br/>\n\n                <p align='center' className={'font-weight-bold'}>Average Inventory</p>\n                <MathComponent tex={String.raw`\\text{Average Inventory} = \\frac{Q^*}{2}\n                    = \\frac{${eoq.toFixed(5)}}{2}\n                    = ${(eoq / 2).toFixed(5)}`}/>\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            <br/>\n            <h2>Batching</h2>\n            <br/>\n            <Form>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"5\">\n                        <MathComponent\n                            tex={String.raw`\\text{Setup cost K}`}/>\n                    </Form.Label>\n                    <br/>\n                    <Col sm=\"7\">\n                        <Form.Control type=\"text\" placeholder=\"Setup Cost K\" value={state.setupCost || ''}\n                                      onChange={e => setState({...state, setupCost: e.target.value})}/>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"5\">\n                        <MathComponent\n                            tex={String.raw`\\text{Annual demand R}`}/>\n                    </Form.Label>\n                    <br/>\n                    <Col sm=\"7\">\n                        <Form.Control type=\"text\" placeholder=\"Annual demand R\" value={state.annualDemand || ''}\n                                      onChange={e => setState({...state, annualDemand: e.target.value})}/>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"5\">\n                        <MathComponent\n                            tex={String.raw`\\text{Holding cost per unit } h = c \\times i`}/>\n                    </Form.Label>\n                    <br/>\n                    <Col sm=\"7\">\n                        <Form.Control type=\"text\" placeholder=\"Holding Cost\" value={state.holdingCost || ''}\n                                      onChange={e => setState({...state, holdingCost: e.target.value})}/>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"5\">\n                        <MathComponent\n                            tex={String.raw`\\text{Unit cost c}`}/>\n                    </Form.Label>\n                    <br/>\n                    <Col sm=\"7\">\n                        <Form.Control type=\"text\" placeholder=\"Unit Cost\" value={state.unitCost || ''}\n                                      onChange={e => setState({...state, unitCost: e.target.value})}/>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"5\">\n                        <MathComponent\n                            tex={String.raw`\\text{Carrying cost rate i}`}/>\n                    </Form.Label>\n                    <br/>\n                    <Col sm=\"7\">\n                        <Form.Control type=\"text\" placeholder=\"Carrying Cost Rate\" value={state.carryingCostRate || ''}\n                                      onChange={e => setState({...state, carryingCostRate: e.target.value})}/>\n                    </Col>\n                </Form.Group>\n            </Form>\n            <br/>\n            <Button variant=\"info\" onClick={handleCalculate}>Calculate EOQ</Button>\n            <hr/>\n            {result}\n        </div>\n    )\n};\n\nexport default SafetyInventory;","import React, { Component } from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { Container, Tabs, Tab } from \"react-bootstrap\";\nimport QueueSystem from './components/QueueSystem';\nimport Batching from \"./components/Batching\";\nimport SafetyInventory from \"./components/SafetyInventory\";\n\nconst divStyle = {\n    margin: '30px',\n};\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <Container style={divStyle}>\n            <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"home\" title=\"Queue System\">\n                    <QueueSystem />\n                </Tab>\n                <Tab eventKey=\"profile\" title=\"Batching\">\n                    <Batching />\n                </Tab>\n                <Tab eventKey=\"contact\" title=\"Safety Inventory\">\n                    <SafetyInventory />\n                </Tab>\n            </Tabs>\n            </Container>\n        );\n    }\n}\n\nexport default hot(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App.jsx';\n\nReactDOM.render(<App />, document.getElementById('app'));\n"],"sourceRoot":""}